# Buid BulletSim binaries from the latest Bullet and BulletSim glue sources

name: BulletSim binaries

on:
  push:
    branches: 
      - workflow2

jobs:
  build:
    strategy:
      matrix: 
        include:
          - os: windows-latest
            osclass: win
            name: "BulletSim binary build for Windows"
            build_type: Release

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}

    steps:
      - name: git checkout
        uses: actions/checkout@v3
        with:
          ref: workflow2
          path: bulletsim

      - name: checkout Bullet
        uses: actions/checkout@v3
        with:
          repository: bulletphysics/bullet3
          path: bulletsim/bullet3

      - name: apply patches to Bullet
        shell: bash
        run: |
          cd bulletsim/bullet3
          for file in ../00*.patch ; do echo "====== $file" ; git apply $file ; done

      - name: set env vars based on sources
        shell: bash
        run: |
          echo "BuildDate=$(date +%Y%m%d)" >> $GITHUB_ENV
          cd bulletsim
          echo "BulletSimVersion=$(cat VERSION)" >> $GITHUB_ENV
          echo "BulletSimGitVersion=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "BulletSimGitVersionShort=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          cd bullet3
          echo "BulletVersion=$(cat VERSION)" >> $GITHUB_ENV
          echo "BulletGitVersion=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "BulletGitVersionShort=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: create BulletSimVersionInfo file
        shell: bash
        run: |
          cd bulletsim
          echo "BuildDate=$BuildDate" > BulletSimVersionInfo
          echo "BulletSimVersion=$BulletSimVersion" >> BulletSimVersionInfo
          echo "BulletSimGitVersion=$BulletSimGitVersion" >> BulletSimVersionInfo
          echo "BulletSimGitVersionShort=$BulletSimGitVersionShort" >> BulletSimVersionInfo
          echo "BulletVersion=$BulletVersion" >> BulletSimVersionInfo
          echo "BulletGitVersion=$BulletGitVersion" >> BulletSimVersionInfo
          echo "BulletGitVersionShort=$BulletGitVersionShort" >> BulletSimVersionInfo

      - name: install CMake
        uses: jwlawson/actions-setup-cmake@v1.13

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v1.3.1

      - name: build Bullet build files
        run: |
          cd bulletsim
          ./buildBulletCMake.ps1

      - name: build BulletSim
        run: |
          cd bulletsim
          ./buildBulletSim.bat

      -name: move built files into destination directory structure
        shell: bash
        run: |
          mkdir -p lib64
          cp bulletsim/BulletSimVersionInfo lib64/
          cp bulletsim/x64/${{ matrix.build_type }}/BulletSim.dll lib64/
          cp bulletsim/x64/${{ matrix.build_type }}/BulletSim.lib lib64/
          cp bulletsim/x64/${{ matrix.build_type }}/BulletSim.pdb lib64/

      - name: Upload built files
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: BulletSim-${{ matrix.osclass }}-${{ env.BuildDate }}
          path: lib64/*
          if-no-files-found: error

# vim: tabstop=2 shiftwidth=2 autoindent expandtab

